{"version":3,"sources":["../dist-esnext/index.js"],"names":["logColors","reset","bright","dim","underscore","blink","reverse","hidden","black","red","green","yellow","blue","magenta","cyan","white","BreakLine","i","lastArg","arg","bl","notBreakFirstLine","hasOwnProperty","breakLine","notBreakAfterConfig","n","log","args","console","format","ptzLogColor","txt","map","undefined","JSON","stringify","logInOut","flog","fn","out"],"mappings":";;;;;;;;;AAAA;;;;;;AACA,IAAMA,YAAY;AACdC,oBADc,EACIC,iBADJ;AAEdC,kBAFc,EAEEC,qBAFF;AAGdC,oBAHc,EAGIC,kBAHJ;AAIdC,qBAJc;AAKdC,qBALc;AAMdC,mBANc,EAMGC,iBANH;AAOdC,sBAPc,EAOMC,gBAPN;AAQdC,uBARc,EAQOC,gBARP;AASdC;AATc,CAAlB;AAWA,IAAMC,YAAY,SAAZA,SAAY,CAACC,CAAD,EAAIC,OAAJ,EAAaC,GAAb,EAAqB;AACnC,QAAIC,KAAKC,kBAAkBJ,CAAlB,CAAT;AACAG,SAAKD,OAAOA,IAAIG,cAAJ,CAAmB,WAAnB,CAAP,GAAyCH,IAAII,SAA7C,GAAyDC,oBAAoBN,OAApB,EAA6BC,GAA7B,CAA9D;AACA,WAAOC,EAAP;AACH,CAJD;AAKA,IAAMC,oBAAoB,SAApBA,iBAAoB,CAACI,CAAD;AAAA,WAAOA,MAAM,CAAb;AAAA,CAA1B;AACA,IAAMD,sBAAsB,SAAtBA,mBAAsB,CAACN,OAAD,EAAUC,GAAV;AAAA,WAAkB,EAAED,WAAWA,QAAQI,cAAR,CAAuB,aAAvB,CAAX,IACzCH,OAAOA,IAAIG,cAAJ,CAAmB,aAAnB,CADkC,IAEzCJ,WAAWA,QAAQI,cAAR,CAAuB,WAAvB,CAF4B,CAAlB;AAAA,CAA5B;AAGA,IAAMI,MAAM,SAANA,GAAM,GAAa;AAAA,sCAATC,IAAS;AAATA,YAAS;AAAA;;AACrBC,YAAQF,GAAR;AACAE,YAAQF,GAAR,CAAY,wBAASG,MAAT,CAAgB,sBAAhB,CAAZ;AACA,QAAIC,gBAAJ;AACA,QAAIZ,UAAU,EAAd;AACA,QAAIa,MAAM,EAAV;AACAJ,SAAKK,GAAL,CAAS,UAACb,GAAD,EAAMF,CAAN,EAAY;AACjB,YAAIA,CAAJ,EACIC,UAAUS,KAAKV,IAAI,CAAT,CAAV;AACJ,YAAMM,YAAYP,UAAUC,CAAV,EAAaC,OAAb,EAAsBC,GAAtB,CAAlB;AACAY,qBAAUR,cAAc,IAAd,GACJ,IADI,GAEJ,EAFN,IAEWO,WAFX;AAGA,YAAIX,QAAQ,IAAR,IAAgBA,QAAQc,SAA5B,EACI,OAAOF,YAAUD,WAAV,GAAwBX,GAAxB,MAAP;AACJ,YAAIA,IAAIW,WAAJ,IAAmBX,IAAIG,cAAJ,CAAmB,WAAnB,CAAvB,EACI,OAAOQ,cAAc9B,UAAUmB,IAAIW,WAAd,KAA8BA,WAA9B,MAArB;AACJ,YAAIX,QAAQ,EAAZ,EACI,OAAOY,QAAU,QAAOZ,GAAP,yCAAOA,GAAP,OAAe,QAAf,GACXe,KAAKC,SAAL,CAAehB,GAAf,EAAoB,IAApB,EAA0B,IAA1B,CADW,GAEXA,GAFC,OAAP;AAGP,KAfD;AAgBAS,YAAQF,GAAR,CAAeK,MAAM/B,UAAUC,KAA/B;AAEH,CAxBD;AAyBA,SAASmC,QAAT,CAAkBC,IAAlB,EAAwBC,EAAxB,EAAqC;AAAA,uCAANX,IAAM;AAANA,YAAM;AAAA;;AACjCU,SAAK,QAAL,EAAeV,IAAf;AACA,QAAMY,MAAMD,oBAAMX,IAAN,CAAZ;AACAU,SAAK,SAAL,EAAgBE,GAAhB;AACA,WAAOA,GAAP;AACH;kBACcb,G;QACNA,G,GAAAA,G;QAAKU,Q,GAAAA,Q;AACd","file":"index.js","sourcesContent":["import moment from 'moment';\nconst logColors = {\n    reset: `\\x1b[0m`, bright: `\\x1b[1m`,\n    dim: `\\x1b[2m`, underscore: `\\x1b[4m`,\n    blink: `\\x1b[5m`, reverse: `\\x1b[7m`,\n    hidden: `\\x1b[8m`,\n    black: `\\x1b[30m`,\n    red: `\\x1b[31m`, green: `\\x1b[32m`,\n    yellow: `\\x1b[33m`, blue: `\\x1b[34m`,\n    magenta: `\\x1b[35m`, cyan: `\\x1b[36m`,\n    white: `\\x1b[37m`\n};\nconst BreakLine = (i, lastArg, arg) => {\n    let bl = notBreakFirstLine(i);\n    bl = arg && arg.hasOwnProperty('breakLine') ? arg.breakLine : notBreakAfterConfig(lastArg, arg);\n    return bl;\n};\nconst notBreakFirstLine = (n) => n === 0;\nconst notBreakAfterConfig = (lastArg, arg) => !(lastArg && lastArg.hasOwnProperty('ptzLogColor')\n    || arg && arg.hasOwnProperty('ptzLogColor')\n    || lastArg && lastArg.hasOwnProperty('breakLine'));\nconst log = (...args) => {\n    console.log(`\\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>`);\n    console.log(moment().format('H:mm:ss MMMM Do YYYY'));\n    let ptzLogColor = ``;\n    let lastArg = {};\n    let txt = '';\n    args.map((arg, i) => {\n        if (i)\n            lastArg = args[i - 1];\n        const breakLine = BreakLine(i, lastArg, arg);\n        txt += `${breakLine === true\n            ? '\\n'\n            : ''}${ptzLogColor}`;\n        if (arg === null || arg === undefined)\n            return txt += `${ptzLogColor}${arg} `;\n        if (arg.ptzLogColor || arg.hasOwnProperty('breakLine'))\n            return ptzLogColor = logColors[arg.ptzLogColor] || ptzLogColor || ``;\n        if (arg !== '')\n            return txt += `${typeof arg === 'object'\n                ? JSON.stringify(arg, null, '\\t')\n                : arg} `;\n    });\n    console.log(`${txt + logColors.reset}\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n`);\n};\nfunction logInOut(flog, fn, ...args) {\n    flog('in: \\n', args);\n    const out = fn(...args);\n    flog('out: \\n', out);\n    return out;\n}\nexport default log;\nexport { log, logInOut, };\n//# sourceMappingURL=index.js.map"]}