{"version":3,"sources":["../dist-esnext/index.js"],"names":["logColors","reset","bright","dim","underscore","blink","reverse","hidden","black","red","green","yellow","blue","magenta","cyan","white","log","args","console","format","ptzColorLog","lastArg","txt","map","arg","i","hasOwnProperty","breakLine","undefined","JSON","stringify","logInOut","flog","fn","out"],"mappings":";;;;;;;;;AAAA;;;;;;AACA,IAAMA,YAAY;AACdC,oBADc,EACIC,iBADJ;AAEdC,kBAFc,EAEEC,qBAFF;AAGdC,oBAHc,EAGIC,kBAHJ;AAIdC,qBAJc;AAKdC,qBALc;AAMdC,mBANc,EAMGC,iBANH;AAOdC,sBAPc,EAOMC,gBAPN;AAQdC,uBARc,EAQOC,gBARP;AASdC;AATc,CAAlB;AAWA,IAAMC,MAAM,SAANA,GAAM,GAAa;AAAA,sCAATC,IAAS;AAATA,YAAS;AAAA;;AACrBC,YAAQF,GAAR;AACAE,YAAQF,GAAR,CAAY,wBAASG,MAAT,CAAgB,sBAAhB,CAAZ;AACA,QAAIC,gBAAJ;AACA,QAAIC,UAAU,EAAd;AACA,QAAIC,MAAM,EAAV;AACAL,SAAKM,GAAL,CAAS,UAACC,GAAD,EAAMC,CAAN,EAAY;AACjB,YAAIA,CAAJ,EAAO;AACHJ,sBAAUJ,KAAKQ,IAAI,CAAT,CAAV;AACH;AACDH,qBAAUD,QAAQK,cAAR,CAAuB,aAAvB,KACH,CAACD,CADE,IAEHD,OAAOA,IAAIE,cAAJ,CAAmB,aAAnB,CAAP,IACIF,IAAIG,SAAJ,KAAkB,IAHnB,GAIJ,EAJI,GAKJ,IALN,IAKaP,WALb;AAMA,YAAII,QAAQ,IAAR,IAAgBA,QAAQI,SAA5B,EACI,OAAON,YAAUF,WAAV,GAAwBI,GAAxB,MAAP;AACJ,YAAIA,IAAIJ,WAAJ,IAAmBI,IAAIE,cAAJ,CAAmB,WAAnB,CAAvB,EACI,OAAON,cAAcpB,UAAUwB,IAAIJ,WAAd,KAA8BA,WAA9B,MAArB;AACJ,YAAII,QAAQ,EAAZ,EACI,OAAOF,QAAU,QAAOE,GAAP,yCAAOA,GAAP,OAAe,QAAf,GACXK,KAAKC,SAAL,CAAeN,GAAf,EAAoB,IAApB,EAA0B,IAA1B,CADW,GAEXA,GAFC,OAAP;AAGP,KAlBD;AAmBAN,YAAQF,GAAR,CAAeM,MAAMtB,UAAUC,KAA/B;AAEH,CA3BD;AA4BA,SAAS8B,QAAT,CAAkBC,IAAlB,EAAwBC,EAAxB,EAAqC;AAAA,uCAANhB,IAAM;AAANA,YAAM;AAAA;;AACjCe,SAAK,QAAL,EAAef,IAAf;AACA,QAAMiB,MAAMD,oBAAMhB,IAAN,CAAZ;AACAe,SAAK,SAAL,EAAgBE,GAAhB;AACA,WAAOA,GAAP;AACH;kBACclB,G;QACNA,G,GAAAA,G;QAAKe,Q,GAAAA,Q;AACd","file":"index.js","sourcesContent":["import moment from 'moment';\nconst logColors = {\n    reset: `\\x1b[0m`, bright: `\\x1b[1m`,\n    dim: `\\x1b[2m`, underscore: `\\x1b[4m`,\n    blink: `\\x1b[5m`, reverse: `\\x1b[7m`,\n    hidden: `\\x1b[8m`,\n    black: `\\x1b[30m`,\n    red: `\\x1b[31m`, green: `\\x1b[32m`,\n    yellow: `\\x1b[33m`, blue: `\\x1b[34m`,\n    magenta: `\\x1b[35m`, cyan: `\\x1b[36m`,\n    white: `\\x1b[37m`\n};\nconst log = (...args) => {\n    console.log(`\\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>`);\n    console.log(moment().format('H:mm:ss MMMM Do YYYY'));\n    let ptzColorLog = ``;\n    let lastArg = {};\n    let txt = '';\n    args.map((arg, i) => {\n        if (i) {\n            lastArg = args[i - 1];\n        }\n        txt += `${lastArg.hasOwnProperty('ptzColorLog')\n            || !i\n            || arg && arg.hasOwnProperty('ptzColorLog')\n                && arg.breakLine !== true\n            ? ''\n            : '\\n'}${ptzColorLog}`;\n        if (arg === null || arg === undefined)\n            return txt += `${ptzColorLog}${arg} `;\n        if (arg.ptzColorLog || arg.hasOwnProperty('breakLine'))\n            return ptzColorLog = logColors[arg.ptzColorLog] || ptzColorLog || ``;\n        if (arg !== '')\n            return txt += `${typeof arg === 'object'\n                ? JSON.stringify(arg, null, '\\t')\n                : arg} `;\n    });\n    console.log(`${txt + logColors.reset}\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n`);\n};\nfunction logInOut(flog, fn, ...args) {\n    flog('in: \\n', args);\n    const out = fn(...args);\n    flog('out: \\n', out);\n    return out;\n}\nexport default log;\nexport { log, logInOut, };\n//# sourceMappingURL=index.js.map"]}